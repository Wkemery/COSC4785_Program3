Terminals unused in grammar

   CLASS
   IF
   ELSE
   WHILE
   RETURN
   PRINT
   VOID
   ASSIGNOP
   LBRACE
   RBRACE


State 12 conflicts: 2 reduce/reduce


Grammar

    0 $accept: input $end

    1 input: %empty
    2      | input exp

    3 exp: type IDENTIFIER SEMICO
    4    | expression
    5    | name

    6 expression: NUM
    7           | NULLKEYWORD
    8           | READ LPAREN RPAREN
    9           | unaryop expression
   10           | expression relationop expression
   11           | expression productop expression
   12           | expression sumop expression
   13           | LPAREN expression RPAREN
   14           | newexpression

   15 name: THIS
   16     | IDENTIFIER
   17     | name DOTOP IDENTIFIER
   18     | name LBRACK expression RBRACK

   19 newexpression: NEW simpletype LPAREN arglist RPAREN
   20              | NEW simpletype optExprBrack optBrack

   21 optExprBrack: %empty
   22             | optExprBrack LBRACK expression RBRACK

   23 optBrack: %empty
   24         | LBRACK RBRACK optBrack

   25 arglist: %empty
   26        | expression COMMA arglist
   27        | expression

   28 unaryop: PLUS
   29        | MINUS
   30        | NOT

   31 relationop: DOUBEQ
   32           | NOTEQ
   33           | LESSEQ
   34           | GREATEQ
   35           | LESS
   36           | GREAT

   37 productop: TIMES
   38          | DIVIDE
   39          | MOD
   40          | DOUBAND

   41 sumop: MINUS
   42      | PLUS
   43      | DOUBBAR

   44 type: simpletype
   45     | type LBRACK RBRACK

   46 simpletype: INT
   47           | IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
error (256)
CLASS (258)
THIS (259) 15
IF (260)
ELSE (261)
WHILE (262)
RETURN (263)
PRINT (264)
READ (265) 8
VOID (266)
NEW (267) 19 20
NULLKEYWORD (268) 7
INT (269) 46
ASSIGNOP (270)
DOTOP (271) 17
COMMA (272) 26
LPAREN (273) 8 13 19
RPAREN (274) 8 13 19
LBRACK (275) 18 22 24 45
RBRACK (276) 18 22 24 45
LBRACE (277)
RBRACE (278)
PLUS (279) 28 42
MINUS (280) 29 41
NOT (281) 30
DOUBEQ (282) 31
NOTEQ (283) 32
LESSEQ (284) 33
GREATEQ (285) 34
LESS (286) 35
GREAT (287) 36
TIMES (288) 37
DIVIDE (289) 38
MOD (290) 39
DOUBAND (291) 40
DOUBBAR (292) 43
IDENTIFIER (293) 3 16 17 47
SEMICO (294) 3
NUM (295) 6
RE (296)
BIN (297)
PRO (298)
NEG (299)
OPTEXP (300)
EXP (301)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
input (48)
    on left: 1 2, on right: 0 2
exp (49)
    on left: 3 4 5, on right: 2
expression (50)
    on left: 6 7 8 9 10 11 12 13 14, on right: 4 9 10 11 12 13 18 22
    26 27
name (51)
    on left: 15 16 17 18, on right: 5 17 18
newexpression (52)
    on left: 19 20, on right: 14
optExprBrack (53)
    on left: 21 22, on right: 20 22
optBrack (54)
    on left: 23 24, on right: 20 24
arglist (55)
    on left: 25 26 27, on right: 19 26
unaryop (56)
    on left: 28 29 30, on right: 9
relationop (57)
    on left: 31 32 33 34 35 36, on right: 10
productop (58)
    on left: 37 38 39 40, on right: 11
sumop (59)
    on left: 41 42 43, on right: 12
type (60)
    on left: 44 45, on right: 3 45
simpletype (61)
    on left: 46 47, on right: 19 20 44


State 0

    0 $accept: . input $end

    $default  reduce using rule 1 (input)

    input  go to state 1


State 1

    0 $accept: input . $end
    2 input: input . exp

    $end         shift, and go to state 2
    THIS         shift, and go to state 3
    READ         shift, and go to state 4
    NEW          shift, and go to state 5
    NULLKEYWORD  shift, and go to state 6
    INT          shift, and go to state 7
    LPAREN       shift, and go to state 8
    PLUS         shift, and go to state 9
    MINUS        shift, and go to state 10
    NOT          shift, and go to state 11
    IDENTIFIER   shift, and go to state 12
    NUM          shift, and go to state 13

    exp            go to state 14
    expression     go to state 15
    name           go to state 16
    newexpression  go to state 17
    unaryop        go to state 18
    type           go to state 19
    simpletype     go to state 20


State 2

    0 $accept: input $end .

    $default  accept


State 3

   15 name: THIS .

    $default  reduce using rule 15 (name)


State 4

    8 expression: READ . LPAREN RPAREN

    LPAREN  shift, and go to state 21


State 5

   19 newexpression: NEW . simpletype LPAREN arglist RPAREN
   20              | NEW . simpletype optExprBrack optBrack

    INT         shift, and go to state 7
    IDENTIFIER  shift, and go to state 22

    simpletype  go to state 23


State 6

    7 expression: NULLKEYWORD .

    $default  reduce using rule 7 (expression)


State 7

   46 simpletype: INT .

    $default  reduce using rule 46 (simpletype)


State 8

   13 expression: LPAREN . expression RPAREN

    READ         shift, and go to state 4
    NEW          shift, and go to state 5
    NULLKEYWORD  shift, and go to state 6
    LPAREN       shift, and go to state 8
    PLUS         shift, and go to state 9
    MINUS        shift, and go to state 10
    NOT          shift, and go to state 11
    NUM          shift, and go to state 13

    expression     go to state 24
    newexpression  go to state 17
    unaryop        go to state 18


State 9

   28 unaryop: PLUS .

    $default  reduce using rule 28 (unaryop)


State 10

   29 unaryop: MINUS .

    $default  reduce using rule 29 (unaryop)


State 11

   30 unaryop: NOT .

    $default  reduce using rule 30 (unaryop)


State 12

   16 name: IDENTIFIER .
   47 simpletype: IDENTIFIER .

    LBRACK      reduce using rule 16 (name)
    LBRACK      [reduce using rule 47 (simpletype)]
    IDENTIFIER  reduce using rule 16 (name)
    IDENTIFIER  [reduce using rule 47 (simpletype)]
    $default    reduce using rule 16 (name)


State 13

    6 expression: NUM .

    $default  reduce using rule 6 (expression)


State 14

    2 input: input exp .

    $default  reduce using rule 2 (input)


State 15

    4 exp: expression .
   10 expression: expression . relationop expression
   11           | expression . productop expression
   12           | expression . sumop expression

    DOUBEQ   shift, and go to state 27
    NOTEQ    shift, and go to state 28
    LESSEQ   shift, and go to state 29
    GREATEQ  shift, and go to state 30
    LESS     shift, and go to state 31
    GREAT    shift, and go to state 32
    TIMES    shift, and go to state 33
    DIVIDE   shift, and go to state 34
    MOD      shift, and go to state 35
    DOUBAND  shift, and go to state 36
    DOUBBAR  shift, and go to state 37

    $default  reduce using rule 4 (exp)

    relationop  go to state 38
    productop   go to state 39
    sumop       go to state 40


State 16

    5 exp: name .
   17 name: name . DOTOP IDENTIFIER
   18     | name . LBRACK expression RBRACK

    DOTOP   shift, and go to state 41
    LBRACK  shift, and go to state 42

    $default  reduce using rule 5 (exp)


State 17

   14 expression: newexpression .

    $default  reduce using rule 14 (expression)


State 18

    9 expression: unaryop . expression

    READ         shift, and go to state 4
    NEW          shift, and go to state 5
    NULLKEYWORD  shift, and go to state 6
    LPAREN       shift, and go to state 8
    PLUS         shift, and go to state 9
    MINUS        shift, and go to state 10
    NOT          shift, and go to state 11
    NUM          shift, and go to state 13

    expression     go to state 43
    newexpression  go to state 17
    unaryop        go to state 18


State 19

    3 exp: type . IDENTIFIER SEMICO
   45 type: type . LBRACK RBRACK

    LBRACK      shift, and go to state 44
    IDENTIFIER  shift, and go to state 45


State 20

   44 type: simpletype .

    $default  reduce using rule 44 (type)


State 21

    8 expression: READ LPAREN . RPAREN

    RPAREN  shift, and go to state 46


State 22

   47 simpletype: IDENTIFIER .

    $default  reduce using rule 47 (simpletype)


State 23

   19 newexpression: NEW simpletype . LPAREN arglist RPAREN
   20              | NEW simpletype . optExprBrack optBrack

    LPAREN  shift, and go to state 47

    $default  reduce using rule 21 (optExprBrack)

    optExprBrack  go to state 48


State 24

   10 expression: expression . relationop expression
   11           | expression . productop expression
   12           | expression . sumop expression
   13           | LPAREN expression . RPAREN

    RPAREN   shift, and go to state 49
    PLUS     shift, and go to state 25
    MINUS    shift, and go to state 26
    DOUBEQ   shift, and go to state 27
    NOTEQ    shift, and go to state 28
    LESSEQ   shift, and go to state 29
    GREATEQ  shift, and go to state 30
    LESS     shift, and go to state 31
    GREAT    shift, and go to state 32
    TIMES    shift, and go to state 33
    DIVIDE   shift, and go to state 34
    MOD      shift, and go to state 35
    DOUBAND  shift, and go to state 36
    DOUBBAR  shift, and go to state 37

    relationop  go to state 38
    productop   go to state 39
    sumop       go to state 40


State 25

   42 sumop: PLUS .

    $default  reduce using rule 42 (sumop)


State 26

   41 sumop: MINUS .

    $default  reduce using rule 41 (sumop)


State 27

   31 relationop: DOUBEQ .

    $default  reduce using rule 31 (relationop)


State 28

   32 relationop: NOTEQ .

    $default  reduce using rule 32 (relationop)


State 29

   33 relationop: LESSEQ .

    $default  reduce using rule 33 (relationop)


State 30

   34 relationop: GREATEQ .

    $default  reduce using rule 34 (relationop)


State 31

   35 relationop: LESS .

    $default  reduce using rule 35 (relationop)


State 32

   36 relationop: GREAT .

    $default  reduce using rule 36 (relationop)


State 33

   37 productop: TIMES .

    $default  reduce using rule 37 (productop)


State 34

   38 productop: DIVIDE .

    $default  reduce using rule 38 (productop)


State 35

   39 productop: MOD .

    $default  reduce using rule 39 (productop)


State 36

   40 productop: DOUBAND .

    $default  reduce using rule 40 (productop)


State 37

   43 sumop: DOUBBAR .

    $default  reduce using rule 43 (sumop)


State 38

   10 expression: expression relationop . expression

    READ         shift, and go to state 4
    NEW          shift, and go to state 5
    NULLKEYWORD  shift, and go to state 6
    LPAREN       shift, and go to state 8
    PLUS         shift, and go to state 9
    MINUS        shift, and go to state 10
    NOT          shift, and go to state 11
    NUM          shift, and go to state 13

    expression     go to state 50
    newexpression  go to state 17
    unaryop        go to state 18


State 39

   11 expression: expression productop . expression

    READ         shift, and go to state 4
    NEW          shift, and go to state 5
    NULLKEYWORD  shift, and go to state 6
    LPAREN       shift, and go to state 8
    PLUS         shift, and go to state 9
    MINUS        shift, and go to state 10
    NOT          shift, and go to state 11
    NUM          shift, and go to state 13

    expression     go to state 51
    newexpression  go to state 17
    unaryop        go to state 18


State 40

   12 expression: expression sumop . expression

    READ         shift, and go to state 4
    NEW          shift, and go to state 5
    NULLKEYWORD  shift, and go to state 6
    LPAREN       shift, and go to state 8
    PLUS         shift, and go to state 9
    MINUS        shift, and go to state 10
    NOT          shift, and go to state 11
    NUM          shift, and go to state 13

    expression     go to state 52
    newexpression  go to state 17
    unaryop        go to state 18


State 41

   17 name: name DOTOP . IDENTIFIER

    IDENTIFIER  shift, and go to state 53


State 42

   18 name: name LBRACK . expression RBRACK

    READ         shift, and go to state 4
    NEW          shift, and go to state 5
    NULLKEYWORD  shift, and go to state 6
    LPAREN       shift, and go to state 8
    PLUS         shift, and go to state 9
    MINUS        shift, and go to state 10
    NOT          shift, and go to state 11
    NUM          shift, and go to state 13

    expression     go to state 54
    newexpression  go to state 17
    unaryop        go to state 18


State 43

    9 expression: unaryop expression .
   10           | expression . relationop expression
   11           | expression . productop expression
   12           | expression . sumop expression

    $default  reduce using rule 9 (expression)

    relationop  go to state 38
    productop   go to state 39
    sumop       go to state 40


State 44

   45 type: type LBRACK . RBRACK

    RBRACK  shift, and go to state 55


State 45

    3 exp: type IDENTIFIER . SEMICO

    SEMICO  shift, and go to state 56


State 46

    8 expression: READ LPAREN RPAREN .

    $default  reduce using rule 8 (expression)


State 47

   19 newexpression: NEW simpletype LPAREN . arglist RPAREN

    READ         shift, and go to state 4
    NEW          shift, and go to state 5
    NULLKEYWORD  shift, and go to state 6
    LPAREN       shift, and go to state 8
    PLUS         shift, and go to state 9
    MINUS        shift, and go to state 10
    NOT          shift, and go to state 11
    NUM          shift, and go to state 13

    $default  reduce using rule 25 (arglist)

    expression     go to state 57
    newexpression  go to state 17
    arglist        go to state 58
    unaryop        go to state 18


State 48

   20 newexpression: NEW simpletype optExprBrack . optBrack
   22 optExprBrack: optExprBrack . LBRACK expression RBRACK

    LBRACK  shift, and go to state 59

    $default  reduce using rule 23 (optBrack)

    optBrack  go to state 60


State 49

   13 expression: LPAREN expression RPAREN .

    $default  reduce using rule 13 (expression)


State 50

   10 expression: expression . relationop expression
   10           | expression relationop expression .
   11           | expression . productop expression
   12           | expression . sumop expression

    PLUS     shift, and go to state 25
    MINUS    shift, and go to state 26
    TIMES    shift, and go to state 33
    DIVIDE   shift, and go to state 34
    MOD      shift, and go to state 35
    DOUBAND  shift, and go to state 36
    DOUBBAR  shift, and go to state 37

    $default  reduce using rule 10 (expression)

    relationop  go to state 38
    productop   go to state 39
    sumop       go to state 40


State 51

   10 expression: expression . relationop expression
   11           | expression . productop expression
   11           | expression productop expression .
   12           | expression . sumop expression

    $default  reduce using rule 11 (expression)

    relationop  go to state 38
    productop   go to state 39
    sumop       go to state 40


State 52

   10 expression: expression . relationop expression
   11           | expression . productop expression
   12           | expression . sumop expression
   12           | expression sumop expression .

    TIMES    shift, and go to state 33
    DIVIDE   shift, and go to state 34
    MOD      shift, and go to state 35
    DOUBAND  shift, and go to state 36

    $default  reduce using rule 12 (expression)

    relationop  go to state 38
    productop   go to state 39
    sumop       go to state 40


State 53

   17 name: name DOTOP IDENTIFIER .

    $default  reduce using rule 17 (name)


State 54

   10 expression: expression . relationop expression
   11           | expression . productop expression
   12           | expression . sumop expression
   18 name: name LBRACK expression . RBRACK

    RBRACK   shift, and go to state 61
    PLUS     shift, and go to state 25
    MINUS    shift, and go to state 26
    DOUBEQ   shift, and go to state 27
    NOTEQ    shift, and go to state 28
    LESSEQ   shift, and go to state 29
    GREATEQ  shift, and go to state 30
    LESS     shift, and go to state 31
    GREAT    shift, and go to state 32
    TIMES    shift, and go to state 33
    DIVIDE   shift, and go to state 34
    MOD      shift, and go to state 35
    DOUBAND  shift, and go to state 36
    DOUBBAR  shift, and go to state 37

    relationop  go to state 38
    productop   go to state 39
    sumop       go to state 40


State 55

   45 type: type LBRACK RBRACK .

    $default  reduce using rule 45 (type)


State 56

    3 exp: type IDENTIFIER SEMICO .

    $default  reduce using rule 3 (exp)


State 57

   10 expression: expression . relationop expression
   11           | expression . productop expression
   12           | expression . sumop expression
   26 arglist: expression . COMMA arglist
   27        | expression .

    COMMA    shift, and go to state 62
    PLUS     shift, and go to state 25
    MINUS    shift, and go to state 26
    DOUBEQ   shift, and go to state 27
    NOTEQ    shift, and go to state 28
    LESSEQ   shift, and go to state 29
    GREATEQ  shift, and go to state 30
    LESS     shift, and go to state 31
    GREAT    shift, and go to state 32
    TIMES    shift, and go to state 33
    DIVIDE   shift, and go to state 34
    MOD      shift, and go to state 35
    DOUBAND  shift, and go to state 36
    DOUBBAR  shift, and go to state 37

    $default  reduce using rule 27 (arglist)

    relationop  go to state 38
    productop   go to state 39
    sumop       go to state 40


State 58

   19 newexpression: NEW simpletype LPAREN arglist . RPAREN

    RPAREN  shift, and go to state 63


State 59

   22 optExprBrack: optExprBrack LBRACK . expression RBRACK
   24 optBrack: LBRACK . RBRACK optBrack

    READ         shift, and go to state 4
    NEW          shift, and go to state 5
    NULLKEYWORD  shift, and go to state 6
    LPAREN       shift, and go to state 8
    RBRACK       shift, and go to state 64
    PLUS         shift, and go to state 9
    MINUS        shift, and go to state 10
    NOT          shift, and go to state 11
    NUM          shift, and go to state 13

    expression     go to state 65
    newexpression  go to state 17
    unaryop        go to state 18


State 60

   20 newexpression: NEW simpletype optExprBrack optBrack .

    $default  reduce using rule 20 (newexpression)


State 61

   18 name: name LBRACK expression RBRACK .

    $default  reduce using rule 18 (name)


State 62

   26 arglist: expression COMMA . arglist

    READ         shift, and go to state 4
    NEW          shift, and go to state 5
    NULLKEYWORD  shift, and go to state 6
    LPAREN       shift, and go to state 8
    PLUS         shift, and go to state 9
    MINUS        shift, and go to state 10
    NOT          shift, and go to state 11
    NUM          shift, and go to state 13

    $default  reduce using rule 25 (arglist)

    expression     go to state 57
    newexpression  go to state 17
    arglist        go to state 66
    unaryop        go to state 18


State 63

   19 newexpression: NEW simpletype LPAREN arglist RPAREN .

    $default  reduce using rule 19 (newexpression)


State 64

   24 optBrack: LBRACK RBRACK . optBrack

    LBRACK  shift, and go to state 67

    $default  reduce using rule 23 (optBrack)

    optBrack  go to state 68


State 65

   10 expression: expression . relationop expression
   11           | expression . productop expression
   12           | expression . sumop expression
   22 optExprBrack: optExprBrack LBRACK expression . RBRACK

    RBRACK   shift, and go to state 69
    PLUS     shift, and go to state 25
    MINUS    shift, and go to state 26
    DOUBEQ   shift, and go to state 27
    NOTEQ    shift, and go to state 28
    LESSEQ   shift, and go to state 29
    GREATEQ  shift, and go to state 30
    LESS     shift, and go to state 31
    GREAT    shift, and go to state 32
    TIMES    shift, and go to state 33
    DIVIDE   shift, and go to state 34
    MOD      shift, and go to state 35
    DOUBAND  shift, and go to state 36
    DOUBBAR  shift, and go to state 37

    relationop  go to state 38
    productop   go to state 39
    sumop       go to state 40


State 66

   26 arglist: expression COMMA arglist .

    $default  reduce using rule 26 (arglist)


State 67

   24 optBrack: LBRACK . RBRACK optBrack

    RBRACK  shift, and go to state 64


State 68

   24 optBrack: LBRACK RBRACK optBrack .

    $default  reduce using rule 24 (optBrack)


State 69

   22 optExprBrack: optExprBrack LBRACK expression RBRACK .

    $default  reduce using rule 22 (optExprBrack)
