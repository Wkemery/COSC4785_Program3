Terminals unused in grammar

   CLASS
   THIS
   IF
   ELSE
   WHILE
   RETURN
   PRINT
   VOID
   NEW
   ASSIGNOP
   DOTOP
   COMMA
   LBRACE
   RBRACE


Grammar

    0 $accept: input $end

    1 input: %empty
    2      | input exp

    3 exp: type IDENTIFIER SEMICO
    4    | expression

    5 expression: NUM
    6           | NULLKEYWORD
    7           | READ LPAREN RPAREN
    8           | unaryop expression
    9           | expression relationop expression
   10           | expression productop expression
   11           | expression sumop expression
   12           | LPAREN expression RPAREN

   13 unaryop: PLUS
   14        | MINUS
   15        | NOT

   16 relationop: DOUBEQ
   17           | NOTEQ
   18           | LESSEQ
   19           | GREATEQ
   20           | LESS
   21           | GREAT

   22 productop: TIMES
   23          | DIVIDE
   24          | MOD
   25          | DOUBAND

   26 sumop: MINUS
   27      | PLUS
   28      | DOUBBAR

   29 type: simpletype
   30     | type LBRACK RBRACK

   31 simpletype: INT
   32           | IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
error (256)
CLASS (258)
THIS (259)
IF (260)
ELSE (261)
WHILE (262)
RETURN (263)
PRINT (264)
READ (265) 7
VOID (266)
NEW (267)
NULLKEYWORD (268) 6
INT (269) 31
ASSIGNOP (270)
DOTOP (271)
COMMA (272)
LPAREN (273) 7 12
RPAREN (274) 7 12
LBRACK (275) 30
RBRACK (276) 30
LBRACE (277)
RBRACE (278)
PLUS (279) 13 27
MINUS (280) 14 26
NOT (281) 15
DOUBEQ (282) 16
NOTEQ (283) 17
LESSEQ (284) 18
GREATEQ (285) 19
LESS (286) 20
GREAT (287) 21
TIMES (288) 22
DIVIDE (289) 23
MOD (290) 24
DOUBAND (291) 25
DOUBBAR (292) 28
IDENTIFIER (293) 3 32
SEMICO (294) 3
NUM (295) 5
RE (296)
BIN (297)
PRO (298)
NEG (299)
EXP (300)


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
input (47)
    on left: 1 2, on right: 0 2
exp (48)
    on left: 3 4, on right: 2
expression (49)
    on left: 5 6 7 8 9 10 11 12, on right: 4 8 9 10 11 12
unaryop (50)
    on left: 13 14 15, on right: 8
relationop (51)
    on left: 16 17 18 19 20 21, on right: 9
productop (52)
    on left: 22 23 24 25, on right: 10
sumop (53)
    on left: 26 27 28, on right: 11
type (54)
    on left: 29 30, on right: 3 30
simpletype (55)
    on left: 31 32, on right: 29


State 0

    0 $accept: . input $end

    $default  reduce using rule 1 (input)

    input  go to state 1


State 1

    0 $accept: input . $end
    2 input: input . exp

    $end         shift, and go to state 2
    READ         shift, and go to state 3
    NULLKEYWORD  shift, and go to state 4
    INT          shift, and go to state 5
    LPAREN       shift, and go to state 6
    PLUS         shift, and go to state 7
    MINUS        shift, and go to state 8
    NOT          shift, and go to state 9
    IDENTIFIER   shift, and go to state 10
    NUM          shift, and go to state 11

    exp         go to state 12
    expression  go to state 13
    unaryop     go to state 14
    type        go to state 15
    simpletype  go to state 16


State 2

    0 $accept: input $end .

    $default  accept


State 3

    7 expression: READ . LPAREN RPAREN

    LPAREN  shift, and go to state 17


State 4

    6 expression: NULLKEYWORD .

    $default  reduce using rule 6 (expression)


State 5

   31 simpletype: INT .

    $default  reduce using rule 31 (simpletype)


State 6

   12 expression: LPAREN . expression RPAREN

    READ         shift, and go to state 3
    NULLKEYWORD  shift, and go to state 4
    LPAREN       shift, and go to state 6
    PLUS         shift, and go to state 7
    MINUS        shift, and go to state 8
    NOT          shift, and go to state 9
    NUM          shift, and go to state 11

    expression  go to state 18
    unaryop     go to state 14


State 7

   13 unaryop: PLUS .

    $default  reduce using rule 13 (unaryop)


State 8

   14 unaryop: MINUS .

    $default  reduce using rule 14 (unaryop)


State 9

   15 unaryop: NOT .

    $default  reduce using rule 15 (unaryop)


State 10

   32 simpletype: IDENTIFIER .

    $default  reduce using rule 32 (simpletype)


State 11

    5 expression: NUM .

    $default  reduce using rule 5 (expression)


State 12

    2 input: input exp .

    $default  reduce using rule 2 (input)


State 13

    4 exp: expression .
    9 expression: expression . relationop expression
   10           | expression . productop expression
   11           | expression . sumop expression

    DOUBEQ   shift, and go to state 21
    NOTEQ    shift, and go to state 22
    LESSEQ   shift, and go to state 23
    GREATEQ  shift, and go to state 24
    LESS     shift, and go to state 25
    GREAT    shift, and go to state 26
    TIMES    shift, and go to state 27
    DIVIDE   shift, and go to state 28
    MOD      shift, and go to state 29
    DOUBAND  shift, and go to state 30
    DOUBBAR  shift, and go to state 31

    $default  reduce using rule 4 (exp)

    relationop  go to state 32
    productop   go to state 33
    sumop       go to state 34


State 14

    8 expression: unaryop . expression

    READ         shift, and go to state 3
    NULLKEYWORD  shift, and go to state 4
    LPAREN       shift, and go to state 6
    PLUS         shift, and go to state 7
    MINUS        shift, and go to state 8
    NOT          shift, and go to state 9
    NUM          shift, and go to state 11

    expression  go to state 35
    unaryop     go to state 14


State 15

    3 exp: type . IDENTIFIER SEMICO
   30 type: type . LBRACK RBRACK

    LBRACK      shift, and go to state 36
    IDENTIFIER  shift, and go to state 37


State 16

   29 type: simpletype .

    $default  reduce using rule 29 (type)


State 17

    7 expression: READ LPAREN . RPAREN

    RPAREN  shift, and go to state 38


State 18

    9 expression: expression . relationop expression
   10           | expression . productop expression
   11           | expression . sumop expression
   12           | LPAREN expression . RPAREN

    RPAREN   shift, and go to state 39
    PLUS     shift, and go to state 19
    MINUS    shift, and go to state 20
    DOUBEQ   shift, and go to state 21
    NOTEQ    shift, and go to state 22
    LESSEQ   shift, and go to state 23
    GREATEQ  shift, and go to state 24
    LESS     shift, and go to state 25
    GREAT    shift, and go to state 26
    TIMES    shift, and go to state 27
    DIVIDE   shift, and go to state 28
    MOD      shift, and go to state 29
    DOUBAND  shift, and go to state 30
    DOUBBAR  shift, and go to state 31

    relationop  go to state 32
    productop   go to state 33
    sumop       go to state 34


State 19

   27 sumop: PLUS .

    $default  reduce using rule 27 (sumop)


State 20

   26 sumop: MINUS .

    $default  reduce using rule 26 (sumop)


State 21

   16 relationop: DOUBEQ .

    $default  reduce using rule 16 (relationop)


State 22

   17 relationop: NOTEQ .

    $default  reduce using rule 17 (relationop)


State 23

   18 relationop: LESSEQ .

    $default  reduce using rule 18 (relationop)


State 24

   19 relationop: GREATEQ .

    $default  reduce using rule 19 (relationop)


State 25

   20 relationop: LESS .

    $default  reduce using rule 20 (relationop)


State 26

   21 relationop: GREAT .

    $default  reduce using rule 21 (relationop)


State 27

   22 productop: TIMES .

    $default  reduce using rule 22 (productop)


State 28

   23 productop: DIVIDE .

    $default  reduce using rule 23 (productop)


State 29

   24 productop: MOD .

    $default  reduce using rule 24 (productop)


State 30

   25 productop: DOUBAND .

    $default  reduce using rule 25 (productop)


State 31

   28 sumop: DOUBBAR .

    $default  reduce using rule 28 (sumop)


State 32

    9 expression: expression relationop . expression

    READ         shift, and go to state 3
    NULLKEYWORD  shift, and go to state 4
    LPAREN       shift, and go to state 6
    PLUS         shift, and go to state 7
    MINUS        shift, and go to state 8
    NOT          shift, and go to state 9
    NUM          shift, and go to state 11

    expression  go to state 40
    unaryop     go to state 14


State 33

   10 expression: expression productop . expression

    READ         shift, and go to state 3
    NULLKEYWORD  shift, and go to state 4
    LPAREN       shift, and go to state 6
    PLUS         shift, and go to state 7
    MINUS        shift, and go to state 8
    NOT          shift, and go to state 9
    NUM          shift, and go to state 11

    expression  go to state 41
    unaryop     go to state 14


State 34

   11 expression: expression sumop . expression

    READ         shift, and go to state 3
    NULLKEYWORD  shift, and go to state 4
    LPAREN       shift, and go to state 6
    PLUS         shift, and go to state 7
    MINUS        shift, and go to state 8
    NOT          shift, and go to state 9
    NUM          shift, and go to state 11

    expression  go to state 42
    unaryop     go to state 14


State 35

    8 expression: unaryop expression .
    9           | expression . relationop expression
   10           | expression . productop expression
   11           | expression . sumop expression

    $default  reduce using rule 8 (expression)

    relationop  go to state 32
    productop   go to state 33
    sumop       go to state 34


State 36

   30 type: type LBRACK . RBRACK

    RBRACK  shift, and go to state 43


State 37

    3 exp: type IDENTIFIER . SEMICO

    SEMICO  shift, and go to state 44


State 38

    7 expression: READ LPAREN RPAREN .

    $default  reduce using rule 7 (expression)


State 39

   12 expression: LPAREN expression RPAREN .

    $default  reduce using rule 12 (expression)


State 40

    9 expression: expression . relationop expression
    9           | expression relationop expression .
   10           | expression . productop expression
   11           | expression . sumop expression

    PLUS     shift, and go to state 19
    MINUS    shift, and go to state 20
    TIMES    shift, and go to state 27
    DIVIDE   shift, and go to state 28
    MOD      shift, and go to state 29
    DOUBAND  shift, and go to state 30
    DOUBBAR  shift, and go to state 31

    $default  reduce using rule 9 (expression)

    relationop  go to state 32
    productop   go to state 33
    sumop       go to state 34


State 41

    9 expression: expression . relationop expression
   10           | expression . productop expression
   10           | expression productop expression .
   11           | expression . sumop expression

    $default  reduce using rule 10 (expression)

    relationop  go to state 32
    productop   go to state 33
    sumop       go to state 34


State 42

    9 expression: expression . relationop expression
   10           | expression . productop expression
   11           | expression . sumop expression
   11           | expression sumop expression .

    TIMES    shift, and go to state 27
    DIVIDE   shift, and go to state 28
    MOD      shift, and go to state 29
    DOUBAND  shift, and go to state 30

    $default  reduce using rule 11 (expression)

    relationop  go to state 32
    productop   go to state 33
    sumop       go to state 34


State 43

   30 type: type LBRACK RBRACK .

    $default  reduce using rule 30 (type)


State 44

    3 exp: type IDENTIFIER SEMICO .

    $default  reduce using rule 3 (exp)
