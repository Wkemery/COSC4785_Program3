Terminals unused in grammar

   CLASS
   IF
   ELSE
   WHILE
   RETURN
   PRINT
   VOID
   ASSIGNOP
   LBRACE
   RBRACE


Grammar

    0 $accept: input $end

    1 input: %empty
    2      | input exp

    3 exp: IDENTIFIER IDENTIFIER SEMICO
    4    | IDENTIFIER multibracks IDENTIFIER SEMICO
    5    | simpletype IDENTIFIER SEMICO
    6    | simpletype multibracks IDENTIFIER SEMICO
    7    | expression
    8    | IDENTIFIER IDENTIFIER error
    9    | simpletype IDENTIFIER error

   10 expression: NUM
   11           | NULLKEYWORD
   12           | READ LPAREN RPAREN
   13           | READ LPAREN error
   14           | unaryop expression
   15           | expression relationop expression
   16           | expression productop expression
   17           | expression sumop expression
   18           | LPAREN expression RPAREN
   19           | LPAREN expression error
   20           | newexpression
   21           | name
   22           | name LPAREN arglist RPAREN
   23           | name LPAREN arglist error

   24 name: THIS
   25     | IDENTIFIER
   26     | name DOTOP IDENTIFIER
   27     | name LBRACK expression RBRACK
   28     | IDENTIFIER LBRACK expression RBRACK
   29     | name LBRACK expression error

   30 newexpression: NEW IDENTIFIER LPAREN arglist RPAREN
   31              | NEW IDENTIFIER LPAREN arglist error
   32              | NEW IDENTIFIER optExprBrack
   33              | NEW IDENTIFIER optExprBrack multibracks
   34              | NEW simpletype LPAREN arglist RPAREN
   35              | NEW simpletype LPAREN arglist error
   36              | NEW simpletype optExprBrack
   37              | NEW simpletype optExprBrack multibracks
   38              | NEW error

   39 optExprBrack: %empty
   40             | optExprBrack LBRACK expression RBRACK

   41 arglist: %empty
   42        | expression COMMA arglist
   43        | expression

   44 unaryop: PLUS
   45        | MINUS
   46        | NOT

   47 relationop: DOUBEQ
   48           | NOTEQ
   49           | LESSEQ
   50           | GREATEQ
   51           | LESS
   52           | GREAT

   53 productop: TIMES
   54          | DIVIDE
   55          | MOD
   56          | DOUBAND

   57 sumop: MINUS
   58      | PLUS
   59      | DOUBBAR

   60 multibracks: LBRACK RBRACK
   61            | multibracks LBRACK RBRACK

   62 simpletype: INT


Terminals, with rules where they appear

$end (0) 0
error (256) 8 9 13 19 23 29 31 35 38
CLASS (258)
THIS (259) 24
IF (260)
ELSE (261)
WHILE (262)
RETURN (263)
PRINT (264)
READ (265) 12 13
VOID (266)
NEW (267) 30 31 32 33 34 35 36 37 38
NULLKEYWORD (268) 11
INT (269) 62
ASSIGNOP (270)
DOTOP (271) 26
COMMA (272) 42
LPAREN (273) 12 13 18 19 22 23 30 31 34 35
RPAREN (274) 12 18 22 30 34
LBRACK (275) 27 28 29 40 60 61
RBRACK (276) 27 28 40 60 61
LBRACE (277)
RBRACE (278)
PLUS (279) 44 58
MINUS (280) 45 57
NOT (281) 46
DOUBEQ (282) 47
NOTEQ (283) 48
LESSEQ (284) 49
GREATEQ (285) 50
LESS (286) 51
GREAT (287) 52
TIMES (288) 53
DIVIDE (289) 54
MOD (290) 55
DOUBAND (291) 56
DOUBBAR (292) 59
IDENTIFIER (293) 3 4 5 6 8 9 25 26 28 30 31 32 33
SEMICO (294) 3 4 5 6
NUM (295) 10
NAME (296)
EXP (297)
RE (298)
BIN (299)
PRO (300)
NEG (301)
OPTEXP (302)


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
input (49)
    on left: 1 2, on right: 0 2
exp (50)
    on left: 3 4 5 6 7 8 9, on right: 2
expression (51)
    on left: 10 11 12 13 14 15 16 17 18 19 20 21 22 23, on right: 7
    14 15 16 17 18 19 27 28 29 40 42 43
name (52)
    on left: 24 25 26 27 28 29, on right: 21 22 23 26 27 29
newexpression (53)
    on left: 30 31 32 33 34 35 36 37 38, on right: 20
optExprBrack (54)
    on left: 39 40, on right: 32 33 36 37 40
arglist (55)
    on left: 41 42 43, on right: 22 23 30 31 34 35 42
unaryop (56)
    on left: 44 45 46, on right: 14
relationop (57)
    on left: 47 48 49 50 51 52, on right: 15
productop (58)
    on left: 53 54 55 56, on right: 16
sumop (59)
    on left: 57 58 59, on right: 17
multibracks (60)
    on left: 60 61, on right: 4 6 33 37 61
simpletype (61)
    on left: 62, on right: 5 6 9 34 35 36 37


State 0

    0 $accept: . input $end

    $default  reduce using rule 1 (input)

    input  go to state 1


State 1

    0 $accept: input . $end
    2 input: input . exp

    $end         shift, and go to state 2
    THIS         shift, and go to state 3
    READ         shift, and go to state 4
    NEW          shift, and go to state 5
    NULLKEYWORD  shift, and go to state 6
    INT          shift, and go to state 7
    LPAREN       shift, and go to state 8
    PLUS         shift, and go to state 9
    MINUS        shift, and go to state 10
    NOT          shift, and go to state 11
    IDENTIFIER   shift, and go to state 12
    NUM          shift, and go to state 13

    exp            go to state 14
    expression     go to state 15
    name           go to state 16
    newexpression  go to state 17
    unaryop        go to state 18
    simpletype     go to state 19


State 2

    0 $accept: input $end .

    $default  accept


State 3

   24 name: THIS .

    $default  reduce using rule 24 (name)


State 4

   12 expression: READ . LPAREN RPAREN
   13           | READ . LPAREN error

    LPAREN  shift, and go to state 20


State 5

   30 newexpression: NEW . IDENTIFIER LPAREN arglist RPAREN
   31              | NEW . IDENTIFIER LPAREN arglist error
   32              | NEW . IDENTIFIER optExprBrack
   33              | NEW . IDENTIFIER optExprBrack multibracks
   34              | NEW . simpletype LPAREN arglist RPAREN
   35              | NEW . simpletype LPAREN arglist error
   36              | NEW . simpletype optExprBrack
   37              | NEW . simpletype optExprBrack multibracks
   38              | NEW . error

    error       shift, and go to state 21
    INT         shift, and go to state 7
    IDENTIFIER  shift, and go to state 22

    simpletype  go to state 23


State 6

   11 expression: NULLKEYWORD .

    $default  reduce using rule 11 (expression)


State 7

   62 simpletype: INT .

    $default  reduce using rule 62 (simpletype)


State 8

   18 expression: LPAREN . expression RPAREN
   19           | LPAREN . expression error

    THIS         shift, and go to state 3
    READ         shift, and go to state 4
    NEW          shift, and go to state 5
    NULLKEYWORD  shift, and go to state 6
    LPAREN       shift, and go to state 8
    PLUS         shift, and go to state 9
    MINUS        shift, and go to state 10
    NOT          shift, and go to state 11
    IDENTIFIER   shift, and go to state 24
    NUM          shift, and go to state 13

    expression     go to state 25
    name           go to state 16
    newexpression  go to state 17
    unaryop        go to state 18


State 9

   44 unaryop: PLUS .

    $default  reduce using rule 44 (unaryop)


State 10

   45 unaryop: MINUS .

    $default  reduce using rule 45 (unaryop)


State 11

   46 unaryop: NOT .

    $default  reduce using rule 46 (unaryop)


State 12

    3 exp: IDENTIFIER . IDENTIFIER SEMICO
    4    | IDENTIFIER . multibracks IDENTIFIER SEMICO
    8    | IDENTIFIER . IDENTIFIER error
   25 name: IDENTIFIER .
   28     | IDENTIFIER . LBRACK expression RBRACK

    LBRACK      shift, and go to state 26
    IDENTIFIER  shift, and go to state 27

    $default  reduce using rule 25 (name)

    multibracks  go to state 28


State 13

   10 expression: NUM .

    $default  reduce using rule 10 (expression)


State 14

    2 input: input exp .

    $default  reduce using rule 2 (input)


State 15

    7 exp: expression .
   15 expression: expression . relationop expression
   16           | expression . productop expression
   17           | expression . sumop expression

    PLUS     shift, and go to state 29
    MINUS    shift, and go to state 30
    DOUBEQ   shift, and go to state 31
    NOTEQ    shift, and go to state 32
    LESSEQ   shift, and go to state 33
    GREATEQ  shift, and go to state 34
    LESS     shift, and go to state 35
    GREAT    shift, and go to state 36
    TIMES    shift, and go to state 37
    DIVIDE   shift, and go to state 38
    MOD      shift, and go to state 39
    DOUBAND  shift, and go to state 40
    DOUBBAR  shift, and go to state 41

    $default  reduce using rule 7 (exp)

    relationop  go to state 42
    productop   go to state 43
    sumop       go to state 44


State 16

   21 expression: name .
   22           | name . LPAREN arglist RPAREN
   23           | name . LPAREN arglist error
   26 name: name . DOTOP IDENTIFIER
   27     | name . LBRACK expression RBRACK
   29     | name . LBRACK expression error

    DOTOP   shift, and go to state 45
    LPAREN  shift, and go to state 46
    LBRACK  shift, and go to state 47

    $default  reduce using rule 21 (expression)


State 17

   20 expression: newexpression .

    $default  reduce using rule 20 (expression)


State 18

   14 expression: unaryop . expression

    THIS         shift, and go to state 3
    READ         shift, and go to state 4
    NEW          shift, and go to state 5
    NULLKEYWORD  shift, and go to state 6
    LPAREN       shift, and go to state 8
    PLUS         shift, and go to state 9
    MINUS        shift, and go to state 10
    NOT          shift, and go to state 11
    IDENTIFIER   shift, and go to state 24
    NUM          shift, and go to state 13

    expression     go to state 48
    name           go to state 16
    newexpression  go to state 17
    unaryop        go to state 18


State 19

    5 exp: simpletype . IDENTIFIER SEMICO
    6    | simpletype . multibracks IDENTIFIER SEMICO
    9    | simpletype . IDENTIFIER error

    LBRACK      shift, and go to state 49
    IDENTIFIER  shift, and go to state 50

    multibracks  go to state 51


State 20

   12 expression: READ LPAREN . RPAREN
   13           | READ LPAREN . error

    error   shift, and go to state 52
    RPAREN  shift, and go to state 53


State 21

   38 newexpression: NEW error .

    $default  reduce using rule 38 (newexpression)


State 22

   30 newexpression: NEW IDENTIFIER . LPAREN arglist RPAREN
   31              | NEW IDENTIFIER . LPAREN arglist error
   32              | NEW IDENTIFIER . optExprBrack
   33              | NEW IDENTIFIER . optExprBrack multibracks

    LPAREN  shift, and go to state 54

    $default  reduce using rule 39 (optExprBrack)

    optExprBrack  go to state 55


State 23

   34 newexpression: NEW simpletype . LPAREN arglist RPAREN
   35              | NEW simpletype . LPAREN arglist error
   36              | NEW simpletype . optExprBrack
   37              | NEW simpletype . optExprBrack multibracks

    LPAREN  shift, and go to state 56

    $default  reduce using rule 39 (optExprBrack)

    optExprBrack  go to state 57


State 24

   25 name: IDENTIFIER .
   28     | IDENTIFIER . LBRACK expression RBRACK

    LBRACK  shift, and go to state 58

    $default  reduce using rule 25 (name)


State 25

   15 expression: expression . relationop expression
   16           | expression . productop expression
   17           | expression . sumop expression
   18           | LPAREN expression . RPAREN
   19           | LPAREN expression . error

    error    shift, and go to state 59
    RPAREN   shift, and go to state 60
    PLUS     shift, and go to state 29
    MINUS    shift, and go to state 30
    DOUBEQ   shift, and go to state 31
    NOTEQ    shift, and go to state 32
    LESSEQ   shift, and go to state 33
    GREATEQ  shift, and go to state 34
    LESS     shift, and go to state 35
    GREAT    shift, and go to state 36
    TIMES    shift, and go to state 37
    DIVIDE   shift, and go to state 38
    MOD      shift, and go to state 39
    DOUBAND  shift, and go to state 40
    DOUBBAR  shift, and go to state 41

    relationop  go to state 42
    productop   go to state 43
    sumop       go to state 44


State 26

   28 name: IDENTIFIER LBRACK . expression RBRACK
   60 multibracks: LBRACK . RBRACK

    THIS         shift, and go to state 3
    READ         shift, and go to state 4
    NEW          shift, and go to state 5
    NULLKEYWORD  shift, and go to state 6
    LPAREN       shift, and go to state 8
    RBRACK       shift, and go to state 61
    PLUS         shift, and go to state 9
    MINUS        shift, and go to state 10
    NOT          shift, and go to state 11
    IDENTIFIER   shift, and go to state 24
    NUM          shift, and go to state 13

    expression     go to state 62
    name           go to state 16
    newexpression  go to state 17
    unaryop        go to state 18


State 27

    3 exp: IDENTIFIER IDENTIFIER . SEMICO
    8    | IDENTIFIER IDENTIFIER . error

    error   shift, and go to state 63
    SEMICO  shift, and go to state 64


State 28

    4 exp: IDENTIFIER multibracks . IDENTIFIER SEMICO
   61 multibracks: multibracks . LBRACK RBRACK

    LBRACK      shift, and go to state 65
    IDENTIFIER  shift, and go to state 66


State 29

   58 sumop: PLUS .

    $default  reduce using rule 58 (sumop)


State 30

   57 sumop: MINUS .

    $default  reduce using rule 57 (sumop)


State 31

   47 relationop: DOUBEQ .

    $default  reduce using rule 47 (relationop)


State 32

   48 relationop: NOTEQ .

    $default  reduce using rule 48 (relationop)


State 33

   49 relationop: LESSEQ .

    $default  reduce using rule 49 (relationop)


State 34

   50 relationop: GREATEQ .

    $default  reduce using rule 50 (relationop)


State 35

   51 relationop: LESS .

    $default  reduce using rule 51 (relationop)


State 36

   52 relationop: GREAT .

    $default  reduce using rule 52 (relationop)


State 37

   53 productop: TIMES .

    $default  reduce using rule 53 (productop)


State 38

   54 productop: DIVIDE .

    $default  reduce using rule 54 (productop)


State 39

   55 productop: MOD .

    $default  reduce using rule 55 (productop)


State 40

   56 productop: DOUBAND .

    $default  reduce using rule 56 (productop)


State 41

   59 sumop: DOUBBAR .

    $default  reduce using rule 59 (sumop)


State 42

   15 expression: expression relationop . expression

    THIS         shift, and go to state 3
    READ         shift, and go to state 4
    NEW          shift, and go to state 5
    NULLKEYWORD  shift, and go to state 6
    LPAREN       shift, and go to state 8
    PLUS         shift, and go to state 9
    MINUS        shift, and go to state 10
    NOT          shift, and go to state 11
    IDENTIFIER   shift, and go to state 24
    NUM          shift, and go to state 13

    expression     go to state 67
    name           go to state 16
    newexpression  go to state 17
    unaryop        go to state 18


State 43

   16 expression: expression productop . expression

    THIS         shift, and go to state 3
    READ         shift, and go to state 4
    NEW          shift, and go to state 5
    NULLKEYWORD  shift, and go to state 6
    LPAREN       shift, and go to state 8
    PLUS         shift, and go to state 9
    MINUS        shift, and go to state 10
    NOT          shift, and go to state 11
    IDENTIFIER   shift, and go to state 24
    NUM          shift, and go to state 13

    expression     go to state 68
    name           go to state 16
    newexpression  go to state 17
    unaryop        go to state 18


State 44

   17 expression: expression sumop . expression

    THIS         shift, and go to state 3
    READ         shift, and go to state 4
    NEW          shift, and go to state 5
    NULLKEYWORD  shift, and go to state 6
    LPAREN       shift, and go to state 8
    PLUS         shift, and go to state 9
    MINUS        shift, and go to state 10
    NOT          shift, and go to state 11
    IDENTIFIER   shift, and go to state 24
    NUM          shift, and go to state 13

    expression     go to state 69
    name           go to state 16
    newexpression  go to state 17
    unaryop        go to state 18


State 45

   26 name: name DOTOP . IDENTIFIER

    IDENTIFIER  shift, and go to state 70


State 46

   22 expression: name LPAREN . arglist RPAREN
   23           | name LPAREN . arglist error

    THIS         shift, and go to state 3
    READ         shift, and go to state 4
    NEW          shift, and go to state 5
    NULLKEYWORD  shift, and go to state 6
    LPAREN       shift, and go to state 8
    PLUS         shift, and go to state 9
    MINUS        shift, and go to state 10
    NOT          shift, and go to state 11
    IDENTIFIER   shift, and go to state 24
    NUM          shift, and go to state 13

    $default  reduce using rule 41 (arglist)

    expression     go to state 71
    name           go to state 16
    newexpression  go to state 17
    arglist        go to state 72
    unaryop        go to state 18


State 47

   27 name: name LBRACK . expression RBRACK
   29     | name LBRACK . expression error

    THIS         shift, and go to state 3
    READ         shift, and go to state 4
    NEW          shift, and go to state 5
    NULLKEYWORD  shift, and go to state 6
    LPAREN       shift, and go to state 8
    PLUS         shift, and go to state 9
    MINUS        shift, and go to state 10
    NOT          shift, and go to state 11
    IDENTIFIER   shift, and go to state 24
    NUM          shift, and go to state 13

    expression     go to state 73
    name           go to state 16
    newexpression  go to state 17
    unaryop        go to state 18


State 48

   14 expression: unaryop expression .
   15           | expression . relationop expression
   16           | expression . productop expression
   17           | expression . sumop expression

    $default  reduce using rule 14 (expression)

    relationop  go to state 42
    productop   go to state 43
    sumop       go to state 44


State 49

   60 multibracks: LBRACK . RBRACK

    RBRACK  shift, and go to state 61


State 50

    5 exp: simpletype IDENTIFIER . SEMICO
    9    | simpletype IDENTIFIER . error

    error   shift, and go to state 74
    SEMICO  shift, and go to state 75


State 51

    6 exp: simpletype multibracks . IDENTIFIER SEMICO
   61 multibracks: multibracks . LBRACK RBRACK

    LBRACK      shift, and go to state 65
    IDENTIFIER  shift, and go to state 76


State 52

   13 expression: READ LPAREN error .

    $default  reduce using rule 13 (expression)


State 53

   12 expression: READ LPAREN RPAREN .

    $default  reduce using rule 12 (expression)


State 54

   30 newexpression: NEW IDENTIFIER LPAREN . arglist RPAREN
   31              | NEW IDENTIFIER LPAREN . arglist error

    THIS         shift, and go to state 3
    READ         shift, and go to state 4
    NEW          shift, and go to state 5
    NULLKEYWORD  shift, and go to state 6
    LPAREN       shift, and go to state 8
    PLUS         shift, and go to state 9
    MINUS        shift, and go to state 10
    NOT          shift, and go to state 11
    IDENTIFIER   shift, and go to state 24
    NUM          shift, and go to state 13

    $default  reduce using rule 41 (arglist)

    expression     go to state 71
    name           go to state 16
    newexpression  go to state 17
    arglist        go to state 77
    unaryop        go to state 18


State 55

   32 newexpression: NEW IDENTIFIER optExprBrack .
   33              | NEW IDENTIFIER optExprBrack . multibracks
   40 optExprBrack: optExprBrack . LBRACK expression RBRACK

    LBRACK  shift, and go to state 78

    $default  reduce using rule 32 (newexpression)

    multibracks  go to state 79


State 56

   34 newexpression: NEW simpletype LPAREN . arglist RPAREN
   35              | NEW simpletype LPAREN . arglist error

    THIS         shift, and go to state 3
    READ         shift, and go to state 4
    NEW          shift, and go to state 5
    NULLKEYWORD  shift, and go to state 6
    LPAREN       shift, and go to state 8
    PLUS         shift, and go to state 9
    MINUS        shift, and go to state 10
    NOT          shift, and go to state 11
    IDENTIFIER   shift, and go to state 24
    NUM          shift, and go to state 13

    $default  reduce using rule 41 (arglist)

    expression     go to state 71
    name           go to state 16
    newexpression  go to state 17
    arglist        go to state 80
    unaryop        go to state 18


State 57

   36 newexpression: NEW simpletype optExprBrack .
   37              | NEW simpletype optExprBrack . multibracks
   40 optExprBrack: optExprBrack . LBRACK expression RBRACK

    LBRACK  shift, and go to state 78

    $default  reduce using rule 36 (newexpression)

    multibracks  go to state 81


State 58

   28 name: IDENTIFIER LBRACK . expression RBRACK

    THIS         shift, and go to state 3
    READ         shift, and go to state 4
    NEW          shift, and go to state 5
    NULLKEYWORD  shift, and go to state 6
    LPAREN       shift, and go to state 8
    PLUS         shift, and go to state 9
    MINUS        shift, and go to state 10
    NOT          shift, and go to state 11
    IDENTIFIER   shift, and go to state 24
    NUM          shift, and go to state 13

    expression     go to state 62
    name           go to state 16
    newexpression  go to state 17
    unaryop        go to state 18


State 59

   19 expression: LPAREN expression error .

    $default  reduce using rule 19 (expression)


State 60

   18 expression: LPAREN expression RPAREN .

    $default  reduce using rule 18 (expression)


State 61

   60 multibracks: LBRACK RBRACK .

    $default  reduce using rule 60 (multibracks)


State 62

   15 expression: expression . relationop expression
   16           | expression . productop expression
   17           | expression . sumop expression
   28 name: IDENTIFIER LBRACK expression . RBRACK

    RBRACK   shift, and go to state 82
    PLUS     shift, and go to state 29
    MINUS    shift, and go to state 30
    DOUBEQ   shift, and go to state 31
    NOTEQ    shift, and go to state 32
    LESSEQ   shift, and go to state 33
    GREATEQ  shift, and go to state 34
    LESS     shift, and go to state 35
    GREAT    shift, and go to state 36
    TIMES    shift, and go to state 37
    DIVIDE   shift, and go to state 38
    MOD      shift, and go to state 39
    DOUBAND  shift, and go to state 40
    DOUBBAR  shift, and go to state 41

    relationop  go to state 42
    productop   go to state 43
    sumop       go to state 44


State 63

    8 exp: IDENTIFIER IDENTIFIER error .

    $default  reduce using rule 8 (exp)


State 64

    3 exp: IDENTIFIER IDENTIFIER SEMICO .

    $default  reduce using rule 3 (exp)


State 65

   61 multibracks: multibracks LBRACK . RBRACK

    RBRACK  shift, and go to state 83


State 66

    4 exp: IDENTIFIER multibracks IDENTIFIER . SEMICO

    SEMICO  shift, and go to state 84


State 67

   15 expression: expression . relationop expression
   15           | expression relationop expression .
   16           | expression . productop expression
   17           | expression . sumop expression

    PLUS     shift, and go to state 29
    MINUS    shift, and go to state 30
    TIMES    shift, and go to state 37
    DIVIDE   shift, and go to state 38
    MOD      shift, and go to state 39
    DOUBAND  shift, and go to state 40
    DOUBBAR  shift, and go to state 41

    $default  reduce using rule 15 (expression)

    relationop  go to state 42
    productop   go to state 43
    sumop       go to state 44


State 68

   15 expression: expression . relationop expression
   16           | expression . productop expression
   16           | expression productop expression .
   17           | expression . sumop expression

    $default  reduce using rule 16 (expression)

    relationop  go to state 42
    productop   go to state 43
    sumop       go to state 44


State 69

   15 expression: expression . relationop expression
   16           | expression . productop expression
   17           | expression . sumop expression
   17           | expression sumop expression .

    TIMES    shift, and go to state 37
    DIVIDE   shift, and go to state 38
    MOD      shift, and go to state 39
    DOUBAND  shift, and go to state 40

    $default  reduce using rule 17 (expression)

    relationop  go to state 42
    productop   go to state 43
    sumop       go to state 44


State 70

   26 name: name DOTOP IDENTIFIER .

    $default  reduce using rule 26 (name)


State 71

   15 expression: expression . relationop expression
   16           | expression . productop expression
   17           | expression . sumop expression
   42 arglist: expression . COMMA arglist
   43        | expression .

    COMMA    shift, and go to state 85
    PLUS     shift, and go to state 29
    MINUS    shift, and go to state 30
    DOUBEQ   shift, and go to state 31
    NOTEQ    shift, and go to state 32
    LESSEQ   shift, and go to state 33
    GREATEQ  shift, and go to state 34
    LESS     shift, and go to state 35
    GREAT    shift, and go to state 36
    TIMES    shift, and go to state 37
    DIVIDE   shift, and go to state 38
    MOD      shift, and go to state 39
    DOUBAND  shift, and go to state 40
    DOUBBAR  shift, and go to state 41

    $default  reduce using rule 43 (arglist)

    relationop  go to state 42
    productop   go to state 43
    sumop       go to state 44


State 72

   22 expression: name LPAREN arglist . RPAREN
   23           | name LPAREN arglist . error

    error   shift, and go to state 86
    RPAREN  shift, and go to state 87


State 73

   15 expression: expression . relationop expression
   16           | expression . productop expression
   17           | expression . sumop expression
   27 name: name LBRACK expression . RBRACK
   29     | name LBRACK expression . error

    error    shift, and go to state 88
    RBRACK   shift, and go to state 89
    PLUS     shift, and go to state 29
    MINUS    shift, and go to state 30
    DOUBEQ   shift, and go to state 31
    NOTEQ    shift, and go to state 32
    LESSEQ   shift, and go to state 33
    GREATEQ  shift, and go to state 34
    LESS     shift, and go to state 35
    GREAT    shift, and go to state 36
    TIMES    shift, and go to state 37
    DIVIDE   shift, and go to state 38
    MOD      shift, and go to state 39
    DOUBAND  shift, and go to state 40
    DOUBBAR  shift, and go to state 41

    relationop  go to state 42
    productop   go to state 43
    sumop       go to state 44


State 74

    9 exp: simpletype IDENTIFIER error .

    $default  reduce using rule 9 (exp)


State 75

    5 exp: simpletype IDENTIFIER SEMICO .

    $default  reduce using rule 5 (exp)


State 76

    6 exp: simpletype multibracks IDENTIFIER . SEMICO

    SEMICO  shift, and go to state 90


State 77

   30 newexpression: NEW IDENTIFIER LPAREN arglist . RPAREN
   31              | NEW IDENTIFIER LPAREN arglist . error

    error   shift, and go to state 91
    RPAREN  shift, and go to state 92


State 78

   40 optExprBrack: optExprBrack LBRACK . expression RBRACK
   60 multibracks: LBRACK . RBRACK

    THIS         shift, and go to state 3
    READ         shift, and go to state 4
    NEW          shift, and go to state 5
    NULLKEYWORD  shift, and go to state 6
    LPAREN       shift, and go to state 8
    RBRACK       shift, and go to state 61
    PLUS         shift, and go to state 9
    MINUS        shift, and go to state 10
    NOT          shift, and go to state 11
    IDENTIFIER   shift, and go to state 24
    NUM          shift, and go to state 13

    expression     go to state 93
    name           go to state 16
    newexpression  go to state 17
    unaryop        go to state 18


State 79

   33 newexpression: NEW IDENTIFIER optExprBrack multibracks .
   61 multibracks: multibracks . LBRACK RBRACK

    LBRACK  shift, and go to state 65

    $default  reduce using rule 33 (newexpression)


State 80

   34 newexpression: NEW simpletype LPAREN arglist . RPAREN
   35              | NEW simpletype LPAREN arglist . error

    error   shift, and go to state 94
    RPAREN  shift, and go to state 95


State 81

   37 newexpression: NEW simpletype optExprBrack multibracks .
   61 multibracks: multibracks . LBRACK RBRACK

    LBRACK  shift, and go to state 65

    $default  reduce using rule 37 (newexpression)


State 82

   28 name: IDENTIFIER LBRACK expression RBRACK .

    $default  reduce using rule 28 (name)


State 83

   61 multibracks: multibracks LBRACK RBRACK .

    $default  reduce using rule 61 (multibracks)


State 84

    4 exp: IDENTIFIER multibracks IDENTIFIER SEMICO .

    $default  reduce using rule 4 (exp)


State 85

   42 arglist: expression COMMA . arglist

    THIS         shift, and go to state 3
    READ         shift, and go to state 4
    NEW          shift, and go to state 5
    NULLKEYWORD  shift, and go to state 6
    LPAREN       shift, and go to state 8
    PLUS         shift, and go to state 9
    MINUS        shift, and go to state 10
    NOT          shift, and go to state 11
    IDENTIFIER   shift, and go to state 24
    NUM          shift, and go to state 13

    $default  reduce using rule 41 (arglist)

    expression     go to state 71
    name           go to state 16
    newexpression  go to state 17
    arglist        go to state 96
    unaryop        go to state 18


State 86

   23 expression: name LPAREN arglist error .

    $default  reduce using rule 23 (expression)


State 87

   22 expression: name LPAREN arglist RPAREN .

    $default  reduce using rule 22 (expression)


State 88

   29 name: name LBRACK expression error .

    $default  reduce using rule 29 (name)


State 89

   27 name: name LBRACK expression RBRACK .

    $default  reduce using rule 27 (name)


State 90

    6 exp: simpletype multibracks IDENTIFIER SEMICO .

    $default  reduce using rule 6 (exp)


State 91

   31 newexpression: NEW IDENTIFIER LPAREN arglist error .

    $default  reduce using rule 31 (newexpression)


State 92

   30 newexpression: NEW IDENTIFIER LPAREN arglist RPAREN .

    $default  reduce using rule 30 (newexpression)


State 93

   15 expression: expression . relationop expression
   16           | expression . productop expression
   17           | expression . sumop expression
   40 optExprBrack: optExprBrack LBRACK expression . RBRACK

    RBRACK   shift, and go to state 97
    PLUS     shift, and go to state 29
    MINUS    shift, and go to state 30
    DOUBEQ   shift, and go to state 31
    NOTEQ    shift, and go to state 32
    LESSEQ   shift, and go to state 33
    GREATEQ  shift, and go to state 34
    LESS     shift, and go to state 35
    GREAT    shift, and go to state 36
    TIMES    shift, and go to state 37
    DIVIDE   shift, and go to state 38
    MOD      shift, and go to state 39
    DOUBAND  shift, and go to state 40
    DOUBBAR  shift, and go to state 41

    relationop  go to state 42
    productop   go to state 43
    sumop       go to state 44


State 94

   35 newexpression: NEW simpletype LPAREN arglist error .

    $default  reduce using rule 35 (newexpression)


State 95

   34 newexpression: NEW simpletype LPAREN arglist RPAREN .

    $default  reduce using rule 34 (newexpression)


State 96

   42 arglist: expression COMMA arglist .

    $default  reduce using rule 42 (arglist)


State 97

   40 optExprBrack: optExprBrack LBRACK expression RBRACK .

    $default  reduce using rule 40 (optExprBrack)
