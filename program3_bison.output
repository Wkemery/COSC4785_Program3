Terminals unused in grammar

   CLASS
   IF
   ELSE
   WHILE
   RETURN
   PRINT
   VOID
   ASSIGNOP
   LBRACE
   RBRACE


Grammar

    0 $accept: input $end

    1 input: %empty
    2      | input exp
    3      | error

    4 exp: IDENTIFIER IDENTIFIER SEMICO
    5    | IDENTIFIER error SEMICO
    6    | IDENTIFIER multibracks IDENTIFIER SEMICO
    7    | simpletype IDENTIFIER SEMICO
    8    | simpletype error SEMICO
    9    | simpletype multibracks IDENTIFIER SEMICO
   10    | expression
   11    | IDENTIFIER IDENTIFIER error
   12    | simpletype IDENTIFIER error

   13 expression: NUM
   14           | NULLKEYWORD
   15           | READ LPAREN RPAREN
   16           | READ LPAREN error
   17           | unaryop expression
   18           | expression relationop expression
   19           | expression productop expression
   20           | expression sumop expression
   21           | LPAREN expression RPAREN
   22           | LPAREN expression error
   23           | newexpression
   24           | name
   25           | name LPAREN arglist RPAREN
   26           | name LPAREN arglist error

   27 name: THIS
   28     | IDENTIFIER
   29     | name DOTOP IDENTIFIER
   30     | name LBRACK expression RBRACK
   31     | IDENTIFIER LBRACK expression RBRACK
   32     | IDENTIFIER LBRACK expression error
   33     | name LBRACK expression error

   34 newexpression: NEW IDENTIFIER LPAREN arglist RPAREN
   35              | NEW IDENTIFIER LPAREN arglist error
   36              | NEW IDENTIFIER optExprBrack
   37              | NEW IDENTIFIER optExprBrack multibracks
   38              | NEW simpletype LPAREN arglist RPAREN
   39              | NEW simpletype LPAREN arglist error
   40              | NEW simpletype optExprBrack
   41              | NEW simpletype optExprBrack multibracks
   42              | NEW error

   43 optExprBrack: %empty
   44             | optExprBrack LBRACK expression RBRACK

   45 arglist: %empty
   46        | expression COMMA arglist
   47        | expression

   48 unaryop: PLUS
   49        | MINUS
   50        | NOT

   51 relationop: DOUBEQ
   52           | NOTEQ
   53           | LESSEQ
   54           | GREATEQ
   55           | LESS
   56           | GREAT

   57 productop: TIMES
   58          | DIVIDE
   59          | MOD
   60          | DOUBAND

   61 sumop: MINUS
   62      | PLUS
   63      | DOUBBAR

   64 multibracks: LBRACK RBRACK
   65            | multibracks LBRACK RBRACK

   66 simpletype: INT


Terminals, with rules where they appear

$end (0) 0
error (256) 3 5 8 11 12 16 22 26 32 33 35 39 42
CLASS (258)
THIS (259) 27
IF (260)
ELSE (261)
WHILE (262)
RETURN (263)
PRINT (264)
READ (265) 15 16
VOID (266)
NEW (267) 34 35 36 37 38 39 40 41 42
NULLKEYWORD (268) 14
INT (269) 66
ASSIGNOP (270)
DOTOP (271) 29
COMMA (272) 46
LPAREN (273) 15 16 21 22 25 26 34 35 38 39
RPAREN (274) 15 21 25 34 38
LBRACK (275) 30 31 32 33 44 64 65
RBRACK (276) 30 31 44 64 65
LBRACE (277)
RBRACE (278)
PLUS (279) 48 62
MINUS (280) 49 61
NOT (281) 50
DOUBEQ (282) 51
NOTEQ (283) 52
LESSEQ (284) 53
GREATEQ (285) 54
LESS (286) 55
GREAT (287) 56
TIMES (288) 57
DIVIDE (289) 58
MOD (290) 59
DOUBAND (291) 60
DOUBBAR (292) 63
IDENTIFIER (293) 4 5 6 7 9 11 12 28 29 31 32 34 35 36 37
SEMICO (294) 4 5 6 7 8 9
NUM (295) 13
NAME (296)
EXP (297)
RE (298)
BIN (299)
PRO (300)
NEG (301)
OPTEXP (302)


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
input (49)
    on left: 1 2 3, on right: 0 2
exp (50)
    on left: 4 5 6 7 8 9 10 11 12, on right: 2
expression (51)
    on left: 13 14 15 16 17 18 19 20 21 22 23 24 25 26, on right: 10
    17 18 19 20 21 22 30 31 32 33 44 46 47
name (52)
    on left: 27 28 29 30 31 32 33, on right: 24 25 26 29 30 33
newexpression (53)
    on left: 34 35 36 37 38 39 40 41 42, on right: 23
optExprBrack (54)
    on left: 43 44, on right: 36 37 40 41 44
arglist (55)
    on left: 45 46 47, on right: 25 26 34 35 38 39 46
unaryop (56)
    on left: 48 49 50, on right: 17
relationop (57)
    on left: 51 52 53 54 55 56, on right: 18
productop (58)
    on left: 57 58 59 60, on right: 19
sumop (59)
    on left: 61 62 63, on right: 20
multibracks (60)
    on left: 64 65, on right: 6 9 37 41 65
simpletype (61)
    on left: 66, on right: 7 8 9 12 38 39 40 41


State 0

    0 $accept: . input $end

    error  shift, and go to state 1

    $end         reduce using rule 1 (input)
    THIS         reduce using rule 1 (input)
    READ         reduce using rule 1 (input)
    NEW          reduce using rule 1 (input)
    NULLKEYWORD  reduce using rule 1 (input)
    INT          reduce using rule 1 (input)
    LPAREN       reduce using rule 1 (input)
    PLUS         reduce using rule 1 (input)
    MINUS        reduce using rule 1 (input)
    NOT          reduce using rule 1 (input)
    IDENTIFIER   reduce using rule 1 (input)
    NUM          reduce using rule 1 (input)

    input  go to state 2


State 1

    3 input: error .

    $default  reduce using rule 3 (input)


State 2

    0 $accept: input . $end
    2 input: input . exp

    $end         shift, and go to state 3
    THIS         shift, and go to state 4
    READ         shift, and go to state 5
    NEW          shift, and go to state 6
    NULLKEYWORD  shift, and go to state 7
    INT          shift, and go to state 8
    LPAREN       shift, and go to state 9
    PLUS         shift, and go to state 10
    MINUS        shift, and go to state 11
    NOT          shift, and go to state 12
    IDENTIFIER   shift, and go to state 13
    NUM          shift, and go to state 14

    exp            go to state 15
    expression     go to state 16
    name           go to state 17
    newexpression  go to state 18
    unaryop        go to state 19
    simpletype     go to state 20


State 3

    0 $accept: input $end .

    $default  accept


State 4

   27 name: THIS .

    $default  reduce using rule 27 (name)


State 5

   15 expression: READ . LPAREN RPAREN
   16           | READ . LPAREN error

    LPAREN  shift, and go to state 21


State 6

   34 newexpression: NEW . IDENTIFIER LPAREN arglist RPAREN
   35              | NEW . IDENTIFIER LPAREN arglist error
   36              | NEW . IDENTIFIER optExprBrack
   37              | NEW . IDENTIFIER optExprBrack multibracks
   38              | NEW . simpletype LPAREN arglist RPAREN
   39              | NEW . simpletype LPAREN arglist error
   40              | NEW . simpletype optExprBrack
   41              | NEW . simpletype optExprBrack multibracks
   42              | NEW . error

    error       shift, and go to state 22
    INT         shift, and go to state 8
    IDENTIFIER  shift, and go to state 23

    simpletype  go to state 24


State 7

   14 expression: NULLKEYWORD .

    $default  reduce using rule 14 (expression)


State 8

   66 simpletype: INT .

    $default  reduce using rule 66 (simpletype)


State 9

   21 expression: LPAREN . expression RPAREN
   22           | LPAREN . expression error

    THIS         shift, and go to state 4
    READ         shift, and go to state 5
    NEW          shift, and go to state 6
    NULLKEYWORD  shift, and go to state 7
    LPAREN       shift, and go to state 9
    PLUS         shift, and go to state 10
    MINUS        shift, and go to state 11
    NOT          shift, and go to state 12
    IDENTIFIER   shift, and go to state 25
    NUM          shift, and go to state 14

    expression     go to state 26
    name           go to state 17
    newexpression  go to state 18
    unaryop        go to state 19


State 10

   48 unaryop: PLUS .

    $default  reduce using rule 48 (unaryop)


State 11

   49 unaryop: MINUS .

    $default  reduce using rule 49 (unaryop)


State 12

   50 unaryop: NOT .

    $default  reduce using rule 50 (unaryop)


State 13

    4 exp: IDENTIFIER . IDENTIFIER SEMICO
    5    | IDENTIFIER . error SEMICO
    6    | IDENTIFIER . multibracks IDENTIFIER SEMICO
   11    | IDENTIFIER . IDENTIFIER error
   28 name: IDENTIFIER .
   31     | IDENTIFIER . LBRACK expression RBRACK
   32     | IDENTIFIER . LBRACK expression error

    error       shift, and go to state 27
    LBRACK      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29

    $end         reduce using rule 28 (name)
    THIS         reduce using rule 28 (name)
    READ         reduce using rule 28 (name)
    NEW          reduce using rule 28 (name)
    NULLKEYWORD  reduce using rule 28 (name)
    INT          reduce using rule 28 (name)
    DOTOP        reduce using rule 28 (name)
    LPAREN       reduce using rule 28 (name)
    PLUS         reduce using rule 28 (name)
    MINUS        reduce using rule 28 (name)
    NOT          reduce using rule 28 (name)
    DOUBEQ       reduce using rule 28 (name)
    NOTEQ        reduce using rule 28 (name)
    LESSEQ       reduce using rule 28 (name)
    GREATEQ      reduce using rule 28 (name)
    LESS         reduce using rule 28 (name)
    GREAT        reduce using rule 28 (name)
    TIMES        reduce using rule 28 (name)
    DIVIDE       reduce using rule 28 (name)
    MOD          reduce using rule 28 (name)
    DOUBAND      reduce using rule 28 (name)
    DOUBBAR      reduce using rule 28 (name)
    NUM          reduce using rule 28 (name)

    multibracks  go to state 30


State 14

   13 expression: NUM .

    $default  reduce using rule 13 (expression)


State 15

    2 input: input exp .

    $default  reduce using rule 2 (input)


State 16

   10 exp: expression .
   18 expression: expression . relationop expression
   19           | expression . productop expression
   20           | expression . sumop expression

    PLUS     shift, and go to state 31
    MINUS    shift, and go to state 32
    DOUBEQ   shift, and go to state 33
    NOTEQ    shift, and go to state 34
    LESSEQ   shift, and go to state 35
    GREATEQ  shift, and go to state 36
    LESS     shift, and go to state 37
    GREAT    shift, and go to state 38
    TIMES    shift, and go to state 39
    DIVIDE   shift, and go to state 40
    MOD      shift, and go to state 41
    DOUBAND  shift, and go to state 42
    DOUBBAR  shift, and go to state 43

    $default  reduce using rule 10 (exp)

    relationop  go to state 44
    productop   go to state 45
    sumop       go to state 46


State 17

   24 expression: name .
   25           | name . LPAREN arglist RPAREN
   26           | name . LPAREN arglist error
   29 name: name . DOTOP IDENTIFIER
   30     | name . LBRACK expression RBRACK
   33     | name . LBRACK expression error

    DOTOP   shift, and go to state 47
    LPAREN  shift, and go to state 48
    LBRACK  shift, and go to state 49

    $default  reduce using rule 24 (expression)


State 18

   23 expression: newexpression .

    $default  reduce using rule 23 (expression)


State 19

   17 expression: unaryop . expression

    THIS         shift, and go to state 4
    READ         shift, and go to state 5
    NEW          shift, and go to state 6
    NULLKEYWORD  shift, and go to state 7
    LPAREN       shift, and go to state 9
    PLUS         shift, and go to state 10
    MINUS        shift, and go to state 11
    NOT          shift, and go to state 12
    IDENTIFIER   shift, and go to state 25
    NUM          shift, and go to state 14

    expression     go to state 50
    name           go to state 17
    newexpression  go to state 18
    unaryop        go to state 19


State 20

    7 exp: simpletype . IDENTIFIER SEMICO
    8    | simpletype . error SEMICO
    9    | simpletype . multibracks IDENTIFIER SEMICO
   12    | simpletype . IDENTIFIER error

    error       shift, and go to state 51
    LBRACK      shift, and go to state 52
    IDENTIFIER  shift, and go to state 53

    multibracks  go to state 54


State 21

   15 expression: READ LPAREN . RPAREN
   16           | READ LPAREN . error

    error   shift, and go to state 55
    RPAREN  shift, and go to state 56


State 22

   42 newexpression: NEW error .

    $default  reduce using rule 42 (newexpression)


State 23

   34 newexpression: NEW IDENTIFIER . LPAREN arglist RPAREN
   35              | NEW IDENTIFIER . LPAREN arglist error
   36              | NEW IDENTIFIER . optExprBrack
   37              | NEW IDENTIFIER . optExprBrack multibracks

    LPAREN  shift, and go to state 57

    $default  reduce using rule 43 (optExprBrack)

    optExprBrack  go to state 58


State 24

   38 newexpression: NEW simpletype . LPAREN arglist RPAREN
   39              | NEW simpletype . LPAREN arglist error
   40              | NEW simpletype . optExprBrack
   41              | NEW simpletype . optExprBrack multibracks

    LPAREN  shift, and go to state 59

    $default  reduce using rule 43 (optExprBrack)

    optExprBrack  go to state 60


State 25

   28 name: IDENTIFIER .
   31     | IDENTIFIER . LBRACK expression RBRACK
   32     | IDENTIFIER . LBRACK expression error

    LBRACK  shift, and go to state 61

    $default  reduce using rule 28 (name)


State 26

   18 expression: expression . relationop expression
   19           | expression . productop expression
   20           | expression . sumop expression
   21           | LPAREN expression . RPAREN
   22           | LPAREN expression . error

    error    shift, and go to state 62
    RPAREN   shift, and go to state 63
    PLUS     shift, and go to state 31
    MINUS    shift, and go to state 32
    DOUBEQ   shift, and go to state 33
    NOTEQ    shift, and go to state 34
    LESSEQ   shift, and go to state 35
    GREATEQ  shift, and go to state 36
    LESS     shift, and go to state 37
    GREAT    shift, and go to state 38
    TIMES    shift, and go to state 39
    DIVIDE   shift, and go to state 40
    MOD      shift, and go to state 41
    DOUBAND  shift, and go to state 42
    DOUBBAR  shift, and go to state 43

    relationop  go to state 44
    productop   go to state 45
    sumop       go to state 46


State 27

    5 exp: IDENTIFIER error . SEMICO

    SEMICO  shift, and go to state 64


State 28

   31 name: IDENTIFIER LBRACK . expression RBRACK
   32     | IDENTIFIER LBRACK . expression error
   64 multibracks: LBRACK . RBRACK

    THIS         shift, and go to state 4
    READ         shift, and go to state 5
    NEW          shift, and go to state 6
    NULLKEYWORD  shift, and go to state 7
    LPAREN       shift, and go to state 9
    RBRACK       shift, and go to state 65
    PLUS         shift, and go to state 10
    MINUS        shift, and go to state 11
    NOT          shift, and go to state 12
    IDENTIFIER   shift, and go to state 25
    NUM          shift, and go to state 14

    expression     go to state 66
    name           go to state 17
    newexpression  go to state 18
    unaryop        go to state 19


State 29

    4 exp: IDENTIFIER IDENTIFIER . SEMICO
   11    | IDENTIFIER IDENTIFIER . error

    error   shift, and go to state 67
    SEMICO  shift, and go to state 68


State 30

    6 exp: IDENTIFIER multibracks . IDENTIFIER SEMICO
   65 multibracks: multibracks . LBRACK RBRACK

    LBRACK      shift, and go to state 69
    IDENTIFIER  shift, and go to state 70


State 31

   62 sumop: PLUS .

    $default  reduce using rule 62 (sumop)


State 32

   61 sumop: MINUS .

    $default  reduce using rule 61 (sumop)


State 33

   51 relationop: DOUBEQ .

    $default  reduce using rule 51 (relationop)


State 34

   52 relationop: NOTEQ .

    $default  reduce using rule 52 (relationop)


State 35

   53 relationop: LESSEQ .

    $default  reduce using rule 53 (relationop)


State 36

   54 relationop: GREATEQ .

    $default  reduce using rule 54 (relationop)


State 37

   55 relationop: LESS .

    $default  reduce using rule 55 (relationop)


State 38

   56 relationop: GREAT .

    $default  reduce using rule 56 (relationop)


State 39

   57 productop: TIMES .

    $default  reduce using rule 57 (productop)


State 40

   58 productop: DIVIDE .

    $default  reduce using rule 58 (productop)


State 41

   59 productop: MOD .

    $default  reduce using rule 59 (productop)


State 42

   60 productop: DOUBAND .

    $default  reduce using rule 60 (productop)


State 43

   63 sumop: DOUBBAR .

    $default  reduce using rule 63 (sumop)


State 44

   18 expression: expression relationop . expression

    THIS         shift, and go to state 4
    READ         shift, and go to state 5
    NEW          shift, and go to state 6
    NULLKEYWORD  shift, and go to state 7
    LPAREN       shift, and go to state 9
    PLUS         shift, and go to state 10
    MINUS        shift, and go to state 11
    NOT          shift, and go to state 12
    IDENTIFIER   shift, and go to state 25
    NUM          shift, and go to state 14

    expression     go to state 71
    name           go to state 17
    newexpression  go to state 18
    unaryop        go to state 19


State 45

   19 expression: expression productop . expression

    THIS         shift, and go to state 4
    READ         shift, and go to state 5
    NEW          shift, and go to state 6
    NULLKEYWORD  shift, and go to state 7
    LPAREN       shift, and go to state 9
    PLUS         shift, and go to state 10
    MINUS        shift, and go to state 11
    NOT          shift, and go to state 12
    IDENTIFIER   shift, and go to state 25
    NUM          shift, and go to state 14

    expression     go to state 72
    name           go to state 17
    newexpression  go to state 18
    unaryop        go to state 19


State 46

   20 expression: expression sumop . expression

    THIS         shift, and go to state 4
    READ         shift, and go to state 5
    NEW          shift, and go to state 6
    NULLKEYWORD  shift, and go to state 7
    LPAREN       shift, and go to state 9
    PLUS         shift, and go to state 10
    MINUS        shift, and go to state 11
    NOT          shift, and go to state 12
    IDENTIFIER   shift, and go to state 25
    NUM          shift, and go to state 14

    expression     go to state 73
    name           go to state 17
    newexpression  go to state 18
    unaryop        go to state 19


State 47

   29 name: name DOTOP . IDENTIFIER

    IDENTIFIER  shift, and go to state 74


State 48

   25 expression: name LPAREN . arglist RPAREN
   26           | name LPAREN . arglist error

    THIS         shift, and go to state 4
    READ         shift, and go to state 5
    NEW          shift, and go to state 6
    NULLKEYWORD  shift, and go to state 7
    LPAREN       shift, and go to state 9
    PLUS         shift, and go to state 10
    MINUS        shift, and go to state 11
    NOT          shift, and go to state 12
    IDENTIFIER   shift, and go to state 25
    NUM          shift, and go to state 14

    $default  reduce using rule 45 (arglist)

    expression     go to state 75
    name           go to state 17
    newexpression  go to state 18
    arglist        go to state 76
    unaryop        go to state 19


State 49

   30 name: name LBRACK . expression RBRACK
   33     | name LBRACK . expression error

    THIS         shift, and go to state 4
    READ         shift, and go to state 5
    NEW          shift, and go to state 6
    NULLKEYWORD  shift, and go to state 7
    LPAREN       shift, and go to state 9
    PLUS         shift, and go to state 10
    MINUS        shift, and go to state 11
    NOT          shift, and go to state 12
    IDENTIFIER   shift, and go to state 25
    NUM          shift, and go to state 14

    expression     go to state 77
    name           go to state 17
    newexpression  go to state 18
    unaryop        go to state 19


State 50

   17 expression: unaryop expression .
   18           | expression . relationop expression
   19           | expression . productop expression
   20           | expression . sumop expression

    $default  reduce using rule 17 (expression)

    relationop  go to state 44
    productop   go to state 45
    sumop       go to state 46


State 51

    8 exp: simpletype error . SEMICO

    SEMICO  shift, and go to state 78


State 52

   64 multibracks: LBRACK . RBRACK

    RBRACK  shift, and go to state 65


State 53

    7 exp: simpletype IDENTIFIER . SEMICO
   12    | simpletype IDENTIFIER . error

    error   shift, and go to state 79
    SEMICO  shift, and go to state 80


State 54

    9 exp: simpletype multibracks . IDENTIFIER SEMICO
   65 multibracks: multibracks . LBRACK RBRACK

    LBRACK      shift, and go to state 69
    IDENTIFIER  shift, and go to state 81


State 55

   16 expression: READ LPAREN error .

    $default  reduce using rule 16 (expression)


State 56

   15 expression: READ LPAREN RPAREN .

    $default  reduce using rule 15 (expression)


State 57

   34 newexpression: NEW IDENTIFIER LPAREN . arglist RPAREN
   35              | NEW IDENTIFIER LPAREN . arglist error

    THIS         shift, and go to state 4
    READ         shift, and go to state 5
    NEW          shift, and go to state 6
    NULLKEYWORD  shift, and go to state 7
    LPAREN       shift, and go to state 9
    PLUS         shift, and go to state 10
    MINUS        shift, and go to state 11
    NOT          shift, and go to state 12
    IDENTIFIER   shift, and go to state 25
    NUM          shift, and go to state 14

    $default  reduce using rule 45 (arglist)

    expression     go to state 75
    name           go to state 17
    newexpression  go to state 18
    arglist        go to state 82
    unaryop        go to state 19


State 58

   36 newexpression: NEW IDENTIFIER optExprBrack .
   37              | NEW IDENTIFIER optExprBrack . multibracks
   44 optExprBrack: optExprBrack . LBRACK expression RBRACK

    LBRACK  shift, and go to state 83

    $default  reduce using rule 36 (newexpression)

    multibracks  go to state 84


State 59

   38 newexpression: NEW simpletype LPAREN . arglist RPAREN
   39              | NEW simpletype LPAREN . arglist error

    THIS         shift, and go to state 4
    READ         shift, and go to state 5
    NEW          shift, and go to state 6
    NULLKEYWORD  shift, and go to state 7
    LPAREN       shift, and go to state 9
    PLUS         shift, and go to state 10
    MINUS        shift, and go to state 11
    NOT          shift, and go to state 12
    IDENTIFIER   shift, and go to state 25
    NUM          shift, and go to state 14

    $default  reduce using rule 45 (arglist)

    expression     go to state 75
    name           go to state 17
    newexpression  go to state 18
    arglist        go to state 85
    unaryop        go to state 19


State 60

   40 newexpression: NEW simpletype optExprBrack .
   41              | NEW simpletype optExprBrack . multibracks
   44 optExprBrack: optExprBrack . LBRACK expression RBRACK

    LBRACK  shift, and go to state 83

    $default  reduce using rule 40 (newexpression)

    multibracks  go to state 86


State 61

   31 name: IDENTIFIER LBRACK . expression RBRACK
   32     | IDENTIFIER LBRACK . expression error

    THIS         shift, and go to state 4
    READ         shift, and go to state 5
    NEW          shift, and go to state 6
    NULLKEYWORD  shift, and go to state 7
    LPAREN       shift, and go to state 9
    PLUS         shift, and go to state 10
    MINUS        shift, and go to state 11
    NOT          shift, and go to state 12
    IDENTIFIER   shift, and go to state 25
    NUM          shift, and go to state 14

    expression     go to state 66
    name           go to state 17
    newexpression  go to state 18
    unaryop        go to state 19


State 62

   22 expression: LPAREN expression error .

    $default  reduce using rule 22 (expression)


State 63

   21 expression: LPAREN expression RPAREN .

    $default  reduce using rule 21 (expression)


State 64

    5 exp: IDENTIFIER error SEMICO .

    $default  reduce using rule 5 (exp)


State 65

   64 multibracks: LBRACK RBRACK .

    $default  reduce using rule 64 (multibracks)


State 66

   18 expression: expression . relationop expression
   19           | expression . productop expression
   20           | expression . sumop expression
   31 name: IDENTIFIER LBRACK expression . RBRACK
   32     | IDENTIFIER LBRACK expression . error

    error    shift, and go to state 87
    RBRACK   shift, and go to state 88
    PLUS     shift, and go to state 31
    MINUS    shift, and go to state 32
    DOUBEQ   shift, and go to state 33
    NOTEQ    shift, and go to state 34
    LESSEQ   shift, and go to state 35
    GREATEQ  shift, and go to state 36
    LESS     shift, and go to state 37
    GREAT    shift, and go to state 38
    TIMES    shift, and go to state 39
    DIVIDE   shift, and go to state 40
    MOD      shift, and go to state 41
    DOUBAND  shift, and go to state 42
    DOUBBAR  shift, and go to state 43

    relationop  go to state 44
    productop   go to state 45
    sumop       go to state 46


State 67

   11 exp: IDENTIFIER IDENTIFIER error .

    $default  reduce using rule 11 (exp)


State 68

    4 exp: IDENTIFIER IDENTIFIER SEMICO .

    $default  reduce using rule 4 (exp)


State 69

   65 multibracks: multibracks LBRACK . RBRACK

    RBRACK  shift, and go to state 89


State 70

    6 exp: IDENTIFIER multibracks IDENTIFIER . SEMICO

    SEMICO  shift, and go to state 90


State 71

   18 expression: expression . relationop expression
   18           | expression relationop expression .
   19           | expression . productop expression
   20           | expression . sumop expression

    PLUS     shift, and go to state 31
    MINUS    shift, and go to state 32
    TIMES    shift, and go to state 39
    DIVIDE   shift, and go to state 40
    MOD      shift, and go to state 41
    DOUBAND  shift, and go to state 42
    DOUBBAR  shift, and go to state 43

    $default  reduce using rule 18 (expression)

    relationop  go to state 44
    productop   go to state 45
    sumop       go to state 46


State 72

   18 expression: expression . relationop expression
   19           | expression . productop expression
   19           | expression productop expression .
   20           | expression . sumop expression

    $default  reduce using rule 19 (expression)

    relationop  go to state 44
    productop   go to state 45
    sumop       go to state 46


State 73

   18 expression: expression . relationop expression
   19           | expression . productop expression
   20           | expression . sumop expression
   20           | expression sumop expression .

    TIMES    shift, and go to state 39
    DIVIDE   shift, and go to state 40
    MOD      shift, and go to state 41
    DOUBAND  shift, and go to state 42

    $default  reduce using rule 20 (expression)

    relationop  go to state 44
    productop   go to state 45
    sumop       go to state 46


State 74

   29 name: name DOTOP IDENTIFIER .

    $default  reduce using rule 29 (name)


State 75

   18 expression: expression . relationop expression
   19           | expression . productop expression
   20           | expression . sumop expression
   46 arglist: expression . COMMA arglist
   47        | expression .

    COMMA    shift, and go to state 91
    PLUS     shift, and go to state 31
    MINUS    shift, and go to state 32
    DOUBEQ   shift, and go to state 33
    NOTEQ    shift, and go to state 34
    LESSEQ   shift, and go to state 35
    GREATEQ  shift, and go to state 36
    LESS     shift, and go to state 37
    GREAT    shift, and go to state 38
    TIMES    shift, and go to state 39
    DIVIDE   shift, and go to state 40
    MOD      shift, and go to state 41
    DOUBAND  shift, and go to state 42
    DOUBBAR  shift, and go to state 43

    $default  reduce using rule 47 (arglist)

    relationop  go to state 44
    productop   go to state 45
    sumop       go to state 46


State 76

   25 expression: name LPAREN arglist . RPAREN
   26           | name LPAREN arglist . error

    error   shift, and go to state 92
    RPAREN  shift, and go to state 93


State 77

   18 expression: expression . relationop expression
   19           | expression . productop expression
   20           | expression . sumop expression
   30 name: name LBRACK expression . RBRACK
   33     | name LBRACK expression . error

    error    shift, and go to state 94
    RBRACK   shift, and go to state 95
    PLUS     shift, and go to state 31
    MINUS    shift, and go to state 32
    DOUBEQ   shift, and go to state 33
    NOTEQ    shift, and go to state 34
    LESSEQ   shift, and go to state 35
    GREATEQ  shift, and go to state 36
    LESS     shift, and go to state 37
    GREAT    shift, and go to state 38
    TIMES    shift, and go to state 39
    DIVIDE   shift, and go to state 40
    MOD      shift, and go to state 41
    DOUBAND  shift, and go to state 42
    DOUBBAR  shift, and go to state 43

    relationop  go to state 44
    productop   go to state 45
    sumop       go to state 46


State 78

    8 exp: simpletype error SEMICO .

    $default  reduce using rule 8 (exp)


State 79

   12 exp: simpletype IDENTIFIER error .

    $default  reduce using rule 12 (exp)


State 80

    7 exp: simpletype IDENTIFIER SEMICO .

    $default  reduce using rule 7 (exp)


State 81

    9 exp: simpletype multibracks IDENTIFIER . SEMICO

    SEMICO  shift, and go to state 96


State 82

   34 newexpression: NEW IDENTIFIER LPAREN arglist . RPAREN
   35              | NEW IDENTIFIER LPAREN arglist . error

    error   shift, and go to state 97
    RPAREN  shift, and go to state 98


State 83

   44 optExprBrack: optExprBrack LBRACK . expression RBRACK
   64 multibracks: LBRACK . RBRACK

    THIS         shift, and go to state 4
    READ         shift, and go to state 5
    NEW          shift, and go to state 6
    NULLKEYWORD  shift, and go to state 7
    LPAREN       shift, and go to state 9
    RBRACK       shift, and go to state 65
    PLUS         shift, and go to state 10
    MINUS        shift, and go to state 11
    NOT          shift, and go to state 12
    IDENTIFIER   shift, and go to state 25
    NUM          shift, and go to state 14

    expression     go to state 99
    name           go to state 17
    newexpression  go to state 18
    unaryop        go to state 19


State 84

   37 newexpression: NEW IDENTIFIER optExprBrack multibracks .
   65 multibracks: multibracks . LBRACK RBRACK

    LBRACK  shift, and go to state 69

    $default  reduce using rule 37 (newexpression)


State 85

   38 newexpression: NEW simpletype LPAREN arglist . RPAREN
   39              | NEW simpletype LPAREN arglist . error

    error   shift, and go to state 100
    RPAREN  shift, and go to state 101


State 86

   41 newexpression: NEW simpletype optExprBrack multibracks .
   65 multibracks: multibracks . LBRACK RBRACK

    LBRACK  shift, and go to state 69

    $default  reduce using rule 41 (newexpression)


State 87

   32 name: IDENTIFIER LBRACK expression error .

    $default  reduce using rule 32 (name)


State 88

   31 name: IDENTIFIER LBRACK expression RBRACK .

    $default  reduce using rule 31 (name)


State 89

   65 multibracks: multibracks LBRACK RBRACK .

    $default  reduce using rule 65 (multibracks)


State 90

    6 exp: IDENTIFIER multibracks IDENTIFIER SEMICO .

    $default  reduce using rule 6 (exp)


State 91

   46 arglist: expression COMMA . arglist

    THIS         shift, and go to state 4
    READ         shift, and go to state 5
    NEW          shift, and go to state 6
    NULLKEYWORD  shift, and go to state 7
    LPAREN       shift, and go to state 9
    PLUS         shift, and go to state 10
    MINUS        shift, and go to state 11
    NOT          shift, and go to state 12
    IDENTIFIER   shift, and go to state 25
    NUM          shift, and go to state 14

    $default  reduce using rule 45 (arglist)

    expression     go to state 75
    name           go to state 17
    newexpression  go to state 18
    arglist        go to state 102
    unaryop        go to state 19


State 92

   26 expression: name LPAREN arglist error .

    $default  reduce using rule 26 (expression)


State 93

   25 expression: name LPAREN arglist RPAREN .

    $default  reduce using rule 25 (expression)


State 94

   33 name: name LBRACK expression error .

    $default  reduce using rule 33 (name)


State 95

   30 name: name LBRACK expression RBRACK .

    $default  reduce using rule 30 (name)


State 96

    9 exp: simpletype multibracks IDENTIFIER SEMICO .

    $default  reduce using rule 9 (exp)


State 97

   35 newexpression: NEW IDENTIFIER LPAREN arglist error .

    $default  reduce using rule 35 (newexpression)


State 98

   34 newexpression: NEW IDENTIFIER LPAREN arglist RPAREN .

    $default  reduce using rule 34 (newexpression)


State 99

   18 expression: expression . relationop expression
   19           | expression . productop expression
   20           | expression . sumop expression
   44 optExprBrack: optExprBrack LBRACK expression . RBRACK

    RBRACK   shift, and go to state 103
    PLUS     shift, and go to state 31
    MINUS    shift, and go to state 32
    DOUBEQ   shift, and go to state 33
    NOTEQ    shift, and go to state 34
    LESSEQ   shift, and go to state 35
    GREATEQ  shift, and go to state 36
    LESS     shift, and go to state 37
    GREAT    shift, and go to state 38
    TIMES    shift, and go to state 39
    DIVIDE   shift, and go to state 40
    MOD      shift, and go to state 41
    DOUBAND  shift, and go to state 42
    DOUBBAR  shift, and go to state 43

    relationop  go to state 44
    productop   go to state 45
    sumop       go to state 46


State 100

   39 newexpression: NEW simpletype LPAREN arglist error .

    $default  reduce using rule 39 (newexpression)


State 101

   38 newexpression: NEW simpletype LPAREN arglist RPAREN .

    $default  reduce using rule 38 (newexpression)


State 102

   46 arglist: expression COMMA arglist .

    $default  reduce using rule 46 (arglist)


State 103

   44 optExprBrack: optExprBrack LBRACK expression RBRACK .

    $default  reduce using rule 44 (optExprBrack)
